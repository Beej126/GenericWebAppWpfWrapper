<Window x:Class="GenericWebAppWpfWrapper.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wv2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
        xmlns:local="clr-namespace:GenericWebAppWpfWrapper"
        mc:Ignorable="d"
        Height="550" Width="850"
        Background="White"
        Closing="Window_Closing"
        StateChanged="Window_StateChanged"
>
  <!-- put button in title bar area...
    slightly older example but good baseline for wanting to add button 
    https://www.codeproject.com/Tips/799302/WPF-Csharp-VB-NET-Additional-fourth-button-on-wind

    updated syntax for the windows shell/chrome stuff
    https://try2explore.com/questions/11506388
  -->
  <Window.Style>
    <Style TargetType="{x:Type Window}">
      <Setter Property="WindowChrome.WindowChrome">
        <Setter.Value>
          <WindowChrome />
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Window}">
            <Grid>
              <!-- window background (covers black) -->
              <Border Background="White" Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}">
                <ContentPresenter Content="{TemplateBinding Content}" />
              </Border>
              <!-- fouth button! -->
              <Button Foreground="Gray" x:Name="btnQuit" Focusable="False" Height="25" HorizontalAlignment="Right" Margin="0,1,150,0" VerticalAlignment="Top" Width="50" WindowChrome.IsHitTestVisibleInChrome="True" Background="Transparent" BorderThickness="0">Q</Button>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Window.Style>

  <!-- taskbar "badge" to indicate new message count -->
  <!-- from: http://10rem.net/blog/2010/05/29/creating-dynamic-windows-7-taskbar-overlay-icons -->
  <!-- more robust but not used yet: https://thomasfreudenberg.com/archive/2010/08/15/creating-dynamic-windows-7-taskbar-overlay-icons-the-mvvm-way/ -->
  <Window.TaskbarItemInfo>
    <TaskbarItemInfo />
  </Window.TaskbarItemInfo>
  <Window.Resources>
    <DataTemplate x:Key="OverlayIcon">
      <Grid Width="20" Height="20">
        <Ellipse Fill="Red" Stroke="White" StrokeThickness="2" />
        <TextBlock Text="{Binding}"
                           TextAlignment="Center"
                           Foreground="White"
                           FontWeight="Bold"
                           Height="16"
                           VerticalAlignment="Center"
                           FontSize="12">
          <TextBlock.Effect>
            <DropShadowEffect ShadowDepth="0" />
          </TextBlock.Effect>
        </TextBlock>
      </Grid>
    </DataTemplate>
  </Window.Resources>

  <DockPanel Margin="0,0,0,0">
        <wv2:WebView2 Name="wv2" WebMessageReceived="Wv2_WebMessageReceived" Initialized="webView_Initialized" />
    </DockPanel>
</Window>
